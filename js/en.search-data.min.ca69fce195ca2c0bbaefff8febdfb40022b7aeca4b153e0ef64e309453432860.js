'use strict';(function(){const indexCfg={};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create(indexCfg);window.geekdocSearchIndex=index;index.add({'id':0,'href':'/company/','title':"Company",'content':""});index.add({'id':1,'href':'/','title':"Glimesh Handbook",'content':""});index.add({'id':2,'href':'/company/teams/','title':"Teams",'content':"Glimesh is an open company with the following teams, each with their own mission and scope. Members can be a part of many teams, or a single team.\nCore The core team is the glue that binds all the teams together and builds the company as a whole. Culture, branding, mission, and other high level goals are set by the core team.\nOther responsibilities:\n Accounting Business Partnerships Governance  Glimesh Community Team The GCT is a group of volunteer supporters of the platform, and it\u0026rsquo;s vision. The GCT\u0026rsquo;s goal is to provide a safe, fair, and efficient streaming platform through consistent and positive community interaction.\nThe Glimesh Community Team is broken up into geographic areas:\n Americas Europe / Africa Asia / Australia  With each geographic area having their own responsible team lead.\nDesign The design team of Glimesh is responsible for creating and driving our brand. Our brand is a combination of our voice as a company, our design, our narrative, and our soul.\nProduct Development Unlike traditional software development companies, we blur the line between Product \u0026amp; Engineering so heavily, they become one team. Collaboratively we hypothesise, create, monitor, and iterate on features.\n"});index.add({'id':3,'href':'/engineering/deploying-the-site/','title':"Deploying the Site",'content':"Currently the deployment is a bit of a manual process. We\u0026rsquo;re utilizing Elixir Releases inside of a docker container for dependency management and portability.\nNo state is stored on the host machine besides a couple of environment variables.\nHow to Deploy  git pull docker-compose build docker-compose down \u0026amp;\u0026amp; docker-compose up -d  How to run Migrations This step is still slightly convoluted, because of the manual nature of our deploys.\n Find the ID of the new container using docker ps. Enter the containers shell by using docker exec -it \u0026lt;container\u0026gt; /bin/sh You can migrate the app: ./bin/glimesh eval \u0026quot;Glimesh.Release.migrate\u0026quot;  "});index.add({'id':4,'href':'/engineering/','title':"Engineering",'content':""});index.add({'id':5,'href':'/company/mission/','title':"Mission",'content':"Our mission at Glimesh is to create a platform where every content creator has an opportunity to shine! We believe that the path to growth for all is by building a platform that puts the streamers \u0026amp; community first, not the advertisers.\n"});index.add({'id':6,'href':'/company/values/','title':"Values",'content':"Transparency We believe that secrets don’t make friends and we should all have an equal voice in how the services we use are made.\nCommunity Together, we’re better.\nEquality We believe all content creators, big or small, regardless of what they stream, deserve an equal chance at recognition for their hard work.\n"});index.add({'id':7,'href':'/categories/','title':"Categories",'content':""});index.add({'id':8,'href':'/tags/','title':"Tags",'content':""});})();