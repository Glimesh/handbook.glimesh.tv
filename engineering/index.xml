<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Engineering on Glimesh Handbook</title><link>https://handbook.glimesh.tv/engineering/</link><description>Recent content in Engineering on Glimesh Handbook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 15 Apr 2021 08:39:08 -0400</lastBuildDate><atom:link href="https://handbook.glimesh.tv/engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Running Payday</title><link>https://handbook.glimesh.tv/engineering/running-payday/</link><pubDate>Thu, 15 Apr 2021 08:39:08 -0400</pubDate><guid>https://handbook.glimesh.tv/engineering/running-payday/</guid><description>Currently, our payday process is ran manually to ensure each week the automated process is working correctly. In the future (after Glimesh/glimesh.tv#618 is resolved), we should be able to run the process automatically.
Running Payday Manually The easiest way to run Payday is just to IEx into a web node, and run Glimesh.PaymentProviders.StripeProvider.payout(). However we don&amp;rsquo;t run that ever, because we want to manually review the transfers that are scheduled for the week.</description></item><item><title>Regions</title><link>https://handbook.glimesh.tv/engineering/regions/</link><pubDate>Tue, 12 Jan 2021 08:39:08 -0400</pubDate><guid>https://handbook.glimesh.tv/engineering/regions/</guid><description>Because of Glimesh&amp;rsquo;s focus on low latency, high quality streams, using regions close to you will give you the best experience.
Current Web Regions Web hosts our platform infrastructure including the website, chat, api, and other direct user facing technology.
Computer Name Human Name DigitalOcean DC&amp;rsquo;s Notes kjfk.web.glimesh.tv North America - New York NYC1, NYC2, NYC3 Current Live Regions Live hosts our video streaming infrastructure.</description></item><item><title>Common SQL Queries</title><link>https://handbook.glimesh.tv/engineering/common-sql-queries/</link><pubDate>Mon, 04 Jan 2021 08:39:08 -0400</pubDate><guid>https://handbook.glimesh.tv/engineering/common-sql-queries/</guid><description>Deleting a user&amp;rsquo;s account and associated data --- Confirm the user&amp;#39;s existance and get their User ID select*fromuserswhereusername=&amp;#39;some-fake-user&amp;#39;;--- Delete relational rows &amp;amp; user row deletefromuser_preferenceswhereuser_id=&amp;lt;user_id&amp;gt;;deletefromemail_logswhereuser_id=&amp;lt;user_id&amp;gt;;deletefromchannel_banswhereuser_id=&amp;lt;user_id&amp;gt;;deletefromappswhereuser_id=&amp;lt;user_id&amp;gt;;deletefromoauth_access_grantswhereresource_owner_id=&amp;lt;user_id&amp;gt;;deletefromoauth_access_tokenswhereresource_owner_id=&amp;lt;user_id&amp;gt;;deletefromoauth_applicationswhereowner_id=&amp;lt;user_id&amp;gt;;deletefromuserswhereid=&amp;lt;user_id&amp;gt;;</description></item><item><title>Deploying the Site</title><link>https://handbook.glimesh.tv/engineering/deploying-the-site/</link><pubDate>Mon, 26 Oct 2020 08:39:08 -0400</pubDate><guid>https://handbook.glimesh.tv/engineering/deploying-the-site/</guid><description>The Glimesh.tv deployments are now handled by running the ansible scripts found in Glimesh/ops
Running Migrations Currently, migrations are still ran very manually. After a web node is deployed you can run migrations on it by connecting to it via IEx.
iex --name &amp;#34;glimesh@dev&amp;#34; --cookie glimesh_secure_cookie --remsh glimesh@web1 ... iex(glimesh@web1)1&amp;gt; Glimesh.Release.migrate()</description></item></channel></rss>