<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Glimesh Handbook</title><link>https://handbook.glimesh.tv/</link><description>Recent content on Glimesh Handbook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 15 Apr 2021 08:39:08 -0400</lastBuildDate><atom:link href="https://handbook.glimesh.tv/index.xml" rel="self" type="application/rss+xml"/><item><title>Running Payday</title><link>https://handbook.glimesh.tv/engineering/running-payday/</link><pubDate>Thu, 15 Apr 2021 08:39:08 -0400</pubDate><guid>https://handbook.glimesh.tv/engineering/running-payday/</guid><description>Currently, our payday process is ran manually to ensure each week the automated process is working correctly. In the future (after Glimesh/glimesh.tv#618 is resolved), we should be able to run the process automatically.
Running Payday Manually The easiest way to run Payday is just to IEx into a web node, and run Glimesh.PaymentProviders.StripeProvider.payout(). However we don&amp;rsquo;t run that ever, because we want to manually review the transfers that are scheduled for the week.</description></item><item><title>Regions</title><link>https://handbook.glimesh.tv/engineering/regions/</link><pubDate>Tue, 12 Jan 2021 08:39:08 -0400</pubDate><guid>https://handbook.glimesh.tv/engineering/regions/</guid><description>Because of Glimesh&amp;rsquo;s focus on low latency, high quality streams, using regions close to you will give you the best experience.
Current Web Regions Web hosts our platform infrastructure including the website, chat, api, and other direct user facing technology.
Computer Name Human Name DigitalOcean DC&amp;rsquo;s Notes kjfk.web.glimesh.tv North America - New York NYC1, NYC2, NYC3 Current Live Regions Live hosts our video streaming infrastructure.</description></item><item><title>Common SQL Queries</title><link>https://handbook.glimesh.tv/engineering/common-sql-queries/</link><pubDate>Mon, 04 Jan 2021 08:39:08 -0400</pubDate><guid>https://handbook.glimesh.tv/engineering/common-sql-queries/</guid><description>Deleting a user&amp;rsquo;s account and associated data --- Confirm the user&amp;#39;s existance and get their User ID select * from users where username = &amp;#39;some-fake-user&amp;#39;; --- Delete relational rows &amp;amp; user row delete from user_preferences where user_id = &amp;lt;user_id&amp;gt;; delete from email_logs where user_id = &amp;lt;user_id&amp;gt;; delete from channel_bans where user_id = &amp;lt;user_id&amp;gt;; delete from apps where user_id = &amp;lt;user_id&amp;gt;; delete from oauth_access_grants where resource_owner_id = &amp;lt;user_id&amp;gt;; delete from oauth_access_tokens where resource_owner_id = &amp;lt;user_id&amp;gt;; delete from oauth_applications where owner_id = &amp;lt;user_id&amp;gt;; delete from users where id = &amp;lt;user_id&amp;gt;;</description></item><item><title>Teams</title><link>https://handbook.glimesh.tv/company/teams/</link><pubDate>Tue, 27 Oct 2020 08:57:08 -0400</pubDate><guid>https://handbook.glimesh.tv/company/teams/</guid><description>Glimesh is an open company with the following teams, each with their own mission and scope. Members can be a part of many teams, or a single team.
Core The core team is the glue that binds all the teams together and builds the company as a whole. Culture, branding, mission, and other high level goals are set by the core team.
Other responsibilities:
Accounting Business Partnerships Governance Glimesh Community Team The GCT is a group of volunteer supporters of the platform, and it&amp;rsquo;s vision.</description></item><item><title>Deploying the Site</title><link>https://handbook.glimesh.tv/engineering/deploying-the-site/</link><pubDate>Mon, 26 Oct 2020 08:39:08 -0400</pubDate><guid>https://handbook.glimesh.tv/engineering/deploying-the-site/</guid><description>The Glimesh.tv deployments are now handled by running the ansible scripts found in Glimesh/ops
Running Migrations Currently, migrations are still ran very manually. After a web node is deployed you can run migrations on it by connecting to it via IEx.
iex --name &amp;#34;glimesh@dev&amp;#34; --cookie glimesh_secure_cookie --remsh glimesh@web1 ... iex(glimesh@web1)1&amp;gt; Glimesh.Release.migrate()</description></item><item><title>Mission</title><link>https://handbook.glimesh.tv/company/mission/</link><pubDate>Mon, 26 Oct 2020 08:39:08 -0400</pubDate><guid>https://handbook.glimesh.tv/company/mission/</guid><description>Our mission at Glimesh is to create a platform where every content creator has an opportunity to shine! We believe that the path to growth for all is by building a platform that puts the streamers &amp;amp; community first, not the advertisers.</description></item><item><title>Values</title><link>https://handbook.glimesh.tv/company/values/</link><pubDate>Mon, 26 Oct 2020 08:39:08 -0400</pubDate><guid>https://handbook.glimesh.tv/company/values/</guid><description>Transparency We believe that secrets don’t make friends and we should all have an equal voice in how the services we use are made.
Community Together, we’re better.
Equality We believe all content creators, big or small, regardless of what they stream, deserve an equal chance at recognition for their hard work.</description></item></channel></rss>